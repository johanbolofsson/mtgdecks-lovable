import{R as e,u as a,j as r}from"./react-core-CnGHm5UM.js";import{I as s,S as t}from"./component-ui-BiEVUsOz.js";import{D as o}from"./component-DeckCard.tsx-Bum_nTam.js";import{s as c}from"./component-AddGameForm.tsx-Cddvg6Xq.js";const n={W:"bg-yellow-100",U:"bg-blue-500",B:"bg-gray-800",R:"bg-red-500",G:"bg-green-500"},m=()=>r.jsx("div",{className:"space-y-4",children:r.jsx(t,{className:"h-32 w-full rounded-lg"})}),d=()=>{const[t,d]=e.useState(""),{data:i,isLoading:l}=a({queryKey:["decks-with-stats"],queryFn:async()=>{const{data:e,error:a}=await c.from("deck").select("id, name, properties");if(a)throw a;return await Promise.all(e.map((async e=>{const{data:a,error:r}=await c.from("game_details").select("winner").eq("deck_id",e.id);if(r)throw r;const s=a?.length||0,t=a?.filter((e=>e.winner))?.length||0,o=s>0?Math.round(t/s*100):0;return{...e,winRate:o,totalGames:s}})))}}),g=i?.filter((e=>e.name?.toLowerCase().includes(t.toLowerCase())||e.properties.commander?.toLowerCase().includes(t.toLowerCase())||e.properties.format?.toLowerCase().includes(t.toLowerCase())))??[];return r.jsxs("div",{className:"space-y-6",children:[r.jsxs("div",{className:"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4",children:[r.jsx("h2",{className:"text-2xl font-semibold text-white",children:"Your Decks"}),r.jsx(s,{type:"search",placeholder:"Search decks by name, commander, or format...",value:t,onChange:e=>d(e.target.value),className:"w-full sm:w-96"})]}),r.jsx("div",{className:"grid gap-6 md:grid-cols-2 lg:grid-cols-3",children:l?Array.from({length:6}).map(((e,a)=>r.jsx(m,{},a))):g.map((e=>r.jsx(o,{deck:{id:e.id,name:e.name||"Unnamed Deck",colors:e.properties.colors||[],winRate:e.winRate,totalGames:e.totalGames,commander:e.properties.commander,format:e.properties.format},colorMap:n,onGameAdded:()=>{}},e.id)))})]})};export{d as D};
