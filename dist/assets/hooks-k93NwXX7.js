import{r as t}from"./react-core-CnGHm5UM.js";let s=0;const o=new Map,e=t=>{if(o.has(t))return;const s=setTimeout((()=>{o.delete(t),T({type:"REMOVE_TOAST",toastId:t})}),1e6);o.set(t,s)},n=(t,s)=>{switch(s.type){case"ADD_TOAST":return{...t,toasts:[s.toast,...t.toasts].slice(0,1)};case"UPDATE_TOAST":return{...t,toasts:t.toasts.map((t=>t.id===s.toast.id?{...t,...s.toast}:t))};case"DISMISS_TOAST":{const{toastId:o}=s;return o?e(o):t.toasts.forEach((t=>{e(t.id)})),{...t,toasts:t.toasts.map((t=>t.id===o||void 0===o?{...t,open:!1}:t))}}case"REMOVE_TOAST":return void 0===s.toastId?{...t,toasts:[]}:{...t,toasts:t.toasts.filter((t=>t.id!==s.toastId))}}},a=[];let r={toasts:[]};function T(t){r=n(r,t),a.forEach((t=>{t(r)}))}function S({...t}){const o=(s=(s+1)%Number.MAX_SAFE_INTEGER,s.toString()),e=()=>T({type:"DISMISS_TOAST",toastId:o});return T({type:"ADD_TOAST",toast:{...t,id:o,open:!0,onOpenChange:t=>{t||e()}}}),{id:o,dismiss:e,update:t=>T({type:"UPDATE_TOAST",toast:{...t,id:o}})}}function c(){const[s,o]=t.useState(r);return t.useEffect((()=>(a.push(o),()=>{const t=a.indexOf(o);t>-1&&a.splice(t,1)})),[s]),{...s,toast:S,dismiss:t=>T({type:"DISMISS_TOAST",toastId:t})}}export{c as u};
